普通 Java 工程，不依赖其他资源，文件清单如下。
一. Java RMI 服务端
1.创建 UserService 接口。  注意：【需要继承 Remote，方法抛出RemoteException异常】
UserService.java
public interface UserService extends Remote{
	String getName() throws RemoteException;
	Account getAccount() throws RemoteException;
}

2.创建 UserServiceImpl 接口实现类
UserServiceImpl.java
public class UserServiceImpl implements UserService {
	public UserServiceImpl () {}
	@Override
	public String getName() {
		return "ljw";
	}
	@Override
	public Account getAccount() {
		Account a = new Account();
		a.setUsername("hehe");
		a.setPassword("123123");
		return a;
	}
}
3.创建 Account.java,UserServiceImpl 中使用的实体。注意【需要 实现 Serializable, Cloneable】
public class Account implements Serializable, Cloneable{
	private static final long serialVersionUID = 1L;
	private String username; 
    private String password;
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	@Override
	public String toString() {
		return "Account [username=" + username + ", password=" + password + "]";
	} 
}

4.创建 RegistRmi.java 
/**
 * 发布服务入口
 * @author KK
 *
 */
public class RegistRmi {
	public static void main(String[] args) {
		UserServiceImpl userServiceImpl=new UserServiceImpl(); 
		try{
			UserService userService=(UserService)UnicastRemoteObject.exportObject(userServiceImpl,0); 
	        // Bind the remote object's stub in the registry 
	        Registry registry = LocateRegistry.createRegistry(8001);
	        registry.rebind("userService", userService); 
		}catch(Exception e){
			e.printStackTrace();
		}
        System.out.println("server is ready"); 
	}
}

5.打包要发布的接口
	UserService.java
	Account.java

6.运行 RegistRmi.java 发布远程服务



二. Java RMI 客户端
1.导入服务端 打包的服务程序。
2.编写 ClientTest.java 测试调用远程服务。
public class ClientTest {
	public static void main(String[] args) {
		 try { 
	            Registry registry = LocateRegistry.getRegistry("localhost",8001); 
	            UserService userService = (UserService) registry.lookup("userService"); 
	            System.out.println(""+userService.getAccount().getUsername()+userService.getAccount().getPassword());
	            System.out.println(userService.getName());
	        } catch (RemoteException e) { 
	            e.printStackTrace(); 
	        } catch (NotBoundException e) { 
	            e.printStackTrace(); 
	        } 
	}
}